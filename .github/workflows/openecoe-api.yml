# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build openECOE-API

on:
  workflow_dispatch:
  push:
    branches: 
      - "master"
      - "develop"
      - "uat"
    # Publish semver tags as releases.
    tags:
      - 'v*'
  pull_request:
    branches: 
      - "master"
      - "uat"

permissions:
  contents: read

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # docker.repository as <account>/<repo>
  IMAGE_NAME: openecoe/api

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --ignore=F821 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  docker:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          #registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: | 
            ${{ env.IMAGE_NAME }}
          tags: |
            type=pep440,pattern={{version}},event=tag
            type=ref,event=branch

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  one_for_all:
    # needs: docker
    runs-on: ubuntu-latest
    env:
      PROJECT: api
      BRANCH: ${{ github.ref_name }}
    steps:
      - name: Dispatch one-for-all build
        run: |
          org="openECOE"
          repo="docker"
          workflow_id="build-one-for-all.yml"
          project="${{ env.PROJECT }}"
          branch="${{ env.BRANCH }}"

          curl -L \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.WORKFLOW_TOKEN}}" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${org}/${repo}/actions/workflows/${workflow_id}/dispatches \
          -d '{
            "ref": "'master'",
            "inputs": {
              "project": "'${project}'",
              "branch": "'${branch}'"
            }
          }'
